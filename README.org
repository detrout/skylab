#+TITLE: Trying to run HCA Pipeline
#+AUTHOR: Diane Trout
* Investigating HCA RNA-seq Pipeline.

https://github.com/HumanCellAtlas/skylab

The documentation is incomplete and their wiki had broken links
[[https://github.com/HumanCellAtlas/skylab/issues/161][issue #161]]

Their pre-built indices live on google cloud.

Cromwell input file
[[file:pipelines/smartseq2_single_sample/SmartSeq2SingleSampleExample.json][pipelines/smartseq2_single_sample/SmartSeq2SingleSampleExample.json]]

"SmartSeq2SingleCell.hisat2_ref_index":
   "gs://hca-dcp-mint-test-data/reference/HISAT2/genome_snp_tran.tar.gz",

I'm not sure how to pull that index.

* Differences in index types.

They include dbSNP in their HISAT2 and RSEM indexes
Their build scripts [[file:docker/hisat2/make_grcm38_snp_tran_gencode.sh::#!/bin/sh][make_grchm38_snp_tran_gencode.sh]]
directly pull files from
ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse

  - gencode.v${GENCODE_RELEASE}.annotation.gtf
  - GRCm38.primary_assembly.genome.fa.gz

Meaning they do not have the tRNA or spike in sequences.

ENCODE4 work and ENTEX activites that are concerned with genotype and
therefore with SNPs it's possible that we should consider this for
human.

* First try to run smartseq version of pipeline

Wiki [[https://github.com/HumanCellAtlas/skylab/wiki/SmartSeq2-Pipeline-(v0.2.0)][SmartSeq2-Pipeline-(v0.2.0)]]

** Try to build docker container
#+BEGIN_SRC bash
pushd docker/hisat2
docker build .
#+END_SRC

Pongo's docker install was broken and had network issues, so I
switched to galvar and it built, then I tried to figure out how to
build the HISAT index, and managed to find a wdl file that references
an already built docker container.

** Building HCA HISAT Index

wdl script for building indexes. Which includes a reference to a
prebuilt docker image.

[[file:library/accessory_workflows/build_hisat2_reference/BuilHISAT2Referencebundle.wdl::task%20BuildHISAT2reference{][library/accessory_workflows/build_hisat2_reference/BuilHISAT2Referencebundle.wdl]]

I decided to try building using  gtf_version 4 and 21

[[file:library/accessory_workflows/build_hisat2_reference/BuilHISAT2MouseReferencebundle4.json][BuilHISAT2MouseReferencebundle4.json]]
#+BEGIN_EXAMPLE
{
    "HISAT2Ref.dbsnp_version": "150",
    "HISAT2Ref.gtf_version": "4",
    "HISAT2Ref.ref_name": "hisat2_M4_snp",
    "HISAT2Ref.path_dir": "/opt/tools/hisat2-2.1.0"
}
#+END_EXAMPLE

[[file:library/accessory_workflows/build_hisat2_reference/BuilHISAT2MouseReferencebundle21.json][BuilHISAT2MouseReferencebundle21.json]]
Is similar.

#+BEGIN_SRC bash
pushd library/accessory_workflows/build_hisat2_reference
java -jar ~/proj/chipseq/cromwell-34.jar run BuilHISAT2MouseReferencebundle.wdl \
     --inputs BuilHISAT2MouseReferencebundle4.json
find . -name hisat2_M4_snp.tar.gz -exec mv {} ../../.. \;

java -jar ~/proj/chipseq/cromwell-34.jar run BuilHISAT2MouseReferencebundle.wdl \
     --inputs BuilHISAT2MouseReferencebundle21.json
find . -name hisat2_M21_snp.tar.gz -exec mv {} ../../.. \;
popd
sudo chown diane:diane gencode_v4_trans.tar.gz
#+END_SRC

No wonder it finished fast. Those are some empty tar files.

#+BEGIN_EXAMPLE
ls -l hisat*
-rw-r--r--   1 nobody nogroup  132 Apr 12 15:00 hisat2_M21_snp.tar.gz
-rw-r--r--   1 nobody nogroup  126 Apr 16 15:06 hisat2_M4_snp.tar.gz
#+END_EXAMPLE

<2019-04-17 Wed>

Customized make_grcm38

** Hisat Transcriptomic index

Created
  - [[file:library/accessory_workflows/build_hisat2_reference/BuilHISAT2EncodeMouseTranReferencebundle.wdl::task%20BuildHISAT2EncodeMouseTrans%20{][BuildHISAT2EncodeMouseTranReferencebundle.wdl]]
  - [[file:library/accessory_workflows/build_hisat2_reference/BuilHISAT2EncodeMouseTranReferencebundle4.json::"HISAT2Ref.gtf_version":%20"4",][BuildHISAT2EncodeMouseTranReferencebundle4.json]]

#+BEGIN_SRC bash
pushd library/accessory_workflows/build_hisat2_reference
java -jar ~/proj/chipseq/cromwell-34.jar run BuilHISAT2EncodeMouseTranReferencebundle.wdl \
     --inputs BuilHISAT2EncodeMouseTranReferencebundle4.json
find cromwell-executions/ -name 'gencode_v4_trans.tar.gz' -exec mv {} ../../.. \;
popd
sudo chown diane:diane gencode_v4_trans.tar.gz
#+END_SRC

** RSEM Genomic Index

Next we need an RSEM index. Their original wdl input file pulled
references directly from

[[file:library/accessory_workflows/build_rsem_reference/BuildRsemMouseBundle4.json][library/accessory_workflows/build_rsem_reference/BuildRsemMouseBundle4.json]]
#+BEGIN_EXAMPLE
{
  "RsemRef.fasta": "/woldlab/loxcyc/home/diane/proj/genome/mm10-M4-male/male.mm10.chrom-ENCFF001RTP_ERCC_spikein.fa",
  "RsemRef.gtf": "/woldlab/loxcyc/home/diane/proj/genome/mm10-M4-male/gencode.vM4-tRNAs-ERCC.gff",
  "RsemRef.ref_name":"gencode_v4_primary"
}
#+END_EXAMPLE
[[file:library/accessory_workflows/build_rsem_reference/BuildRsemMouseBundle21.json][library/accessory_workflows/build_rsem_reference/BuildRsemMouseBundle21.json]]

#+BEGIN_SRC bash
cd library/accessory_workflows/build_rsem_reference
java -jar ~/proj/chipseq/cromwell-34.jar run BuildRsemReferenceBundle.wdl \
     --inputs BuildRsemMouseBundle4.json
#+END_SRC

#+BEGIN_SRC bash
cd library/accessory_workflows/build_rsem_reference
find cromwell-executions -name 'gencode_v4_primary.tar' -exec mv {} ../../.. \; && \
    rm -rf cromwell-executions
#+END_SRC

#+RESULTS:

That gencode_v4_primary.tar looks promising
#+BEGIN_SRC bash
cd library/accessory_workflows/build_rsem_reference
tar tavf cromwell-executions/RsemRef/*/call-BuildRsemReference/execution/gencode_v4_primary.tar
#+END_SRC

#+RESULTS:
| drwxr-xr-x | nobody/nogroup |         0 | 2019-04-16 | 15:37 | rsem/                                |
| -rw-r--r-- | nobody/nogroup |  71612027 | 2019-04-16 | 15:33 | rsem/rsem_trans_index.ti             |
| -rw-r--r-- | nobody/nogroup |  22506308 | 2019-04-16 | 15:41 | rsem/rsem_trans_index.rev.2.ebwt     |
| -rw-r--r-- | nobody/nogroup |  60047434 | 2019-04-16 | 15:37 | rsem/rsem_trans_index.1.ebwt         |
| -rw-r--r-- | nobody/nogroup | 194987306 | 2019-04-16 | 15:33 | rsem/rsem_trans_index.seq            |
| -rw-r--r-- | nobody/nogroup |  45012602 | 2019-04-16 | 15:33 | rsem/rsem_trans_index.4.ebwt         |
| -rw-r--r-- | nobody/nogroup | 182640557 | 2019-04-16 | 15:33 | rsem/rsem_trans_index.n2g.idx.fa     |
| -rw-r--r-- | nobody/nogroup |  60047434 | 2019-04-16 | 15:41 | rsem/rsem_trans_index.rev.1.ebwt     |
| -rw-r--r-- | nobody/nogroup | 182640557 | 2019-04-16 | 15:33 | rsem/rsem_trans_index.idx.fa         |
| -rw-r--r-- | nobody/nogroup |  22506308 | 2019-04-16 | 15:37 | rsem/rsem_trans_index.2.ebwt         |
| -rw-r--r-- | nobody/nogroup |      1818 | 2019-04-16 | 15:33 | rsem/rsem_trans_index.chrlist        |
| -rw-r--r-- | nobody/nogroup |    430559 | 2019-04-16 | 15:33 | rsem/rsem_trans_index.grp            |
| -rw-r--r-- | nobody/nogroup | 182640557 | 2019-04-16 | 15:33 | rsem/rsem_trans_index.transcripts.fa |
| -rw-r--r-- | nobody/nogroup |   1169855 | 2019-04-16 | 15:33 | rsem/rsem_trans_index.3.ebwt         |

* HISAT2 Transcriptome index?

The [[file:pipelines/smartseq2_single_sample/SmartSeq2SingleSample.wdl][SmartSeq2SingleSample.wdl]] seems to refer to a
hisat2_ref_trans_name": "gencode_v27_trans_rsem",
It looks like that's produced by
[[file:library/accessory_workflows/build_hisat2_reference/BuilHISAT2forRSEM.wdl::task%20BuildHISAT2forRSEM%20{][BuilHISAT2forRSEM.wdl]]
wrote [[file:library/accessory_workflows/build_hisat2_reference/BuilHISAT2EncodeMouseforRSEM.json][BuilHISAT2EncodeMouseforRSEM.json]] to build new index.

#+BEGIN_SRC bash
pushd library/accessory_workflows/build_hisat2_reference
java -jar ~/proj/chipseq/cromwell-34.jar run BuilHISAT2forRSEM.wdl \
     --inputs BuilHISAT2EncodeMouseforRSEM.json
#+END_SRC

* Does it align?
  <2019-04-18 Thu>

Now that we have indexes for HISAT and rsem

Oh... We need both genomic and transcriptomic index, go build that first
[[*Hisat Transcriptomic index][Hisat Transcriptomic index]]

Lets try customizing the input file
[[file:pipelines/smartseq2_single_sample/ENCODEMouseSingle.json][ENCODEMouseSingle.json]]

As I read through it I found several files that I needed but didn't
have available.

** Make rRNA intervals

I needed an rRNA list so I added  [[file:/scp:galvar:/woldlab/loxcyc/home/diane/proj/long-rna-seq-condor/woldrnaseq/make_picard_rrna_intervals.py::def%20main(cmdline=None):][make_picard_rrna_intervals.py]] to
long-rna-seq-condor.

** Make refFlat

I needed the refFlat file added [[file:/scp:galvar:/woldlab/loxcyc/home/diane/proj/long-rna-seq-condor/woldrnaseq/make_refflat.py::def%20main(cmdline=None):][make_refflat.py]] to long-rna-seq-condor

** Back to aligning

The original [[file:pipelines/smartseq2_single_sample/SmartSeq2SingleSample.wdl::import%20"HISAT2.wdl"%20as%20HISAT2][SmartSeq2SingleSample.wdl]] was written assuming paired
end. I've started modifying it to do a single ended run.

Their docs refer to a single fastq, but I have multiple. The HISAT2
docs seem to suggest that it can take a comma separated list of fastqs

#+BEGIN_SRC bash
java -jar ~/proj/chipseq/cromwell-34.jar run pipelines/smartseq2_single_sample/SmartSeq2SingleEnd.wdl \
     --inputs pipelines/smartseq2_single_sample/ENCODEMouseSingle.json

#+END_SRC



* Not working... not sure how to set import paths for cromwell

cromwell.jar run has a parameter -p / --imports that specifies a
directory or zipfile to search.

Of course when I tried the directory it complained it was a directory

#+BEGIN_SRC bash :results none
cd library/tasks
zip -9 ../../library.zip *.wdl
#+END_SRC

* TODO Try it with and without snps.
  does it impact index build type
  does it impact run time?
